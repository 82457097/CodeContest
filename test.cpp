#include<vector>
#include<iostream>

using namespace std;

int main() {
    /*int map[MAPSIZE_X][MAPSIZE_Y] = {
     1, 5, 1, 0, 1, 1, 1, 1, 1, 1 ,
     1, 0, 6, 0, 0, 0, 0, 0, 0, 1 ,
     1, 0, 0, 1, 9, 1, 0, 0, 0, 1 ,
     1, 4, 7, 1, 1, 1, 1, 0, 0, 1 ,
     1, 1, 1, 1, 1, 1, 1, 0, 0, 1 ,
     1, 3, 1, 8, 1, 1, 0, 0, 1, 1 ,
     1, 0, 1, 1, 1, 1, 1, 0, 0, 1 ,
     1, 1, 1, 1, 1, 1, 1, 0, 0, 1 ,
     1, 0, 0, 0, 0, 0, 0, 5, 1000, 1 ,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1000 
    };
    /*int map[25][25] = {
        1,5,2,5,5,2,1,0,2,4,5,5,3,4,5,3,2,5,4,2,1,5,3,5,5,
        5,3,2,1,2,3,9,0,2,4,9,5,2,2,4,2,1,3,3,0,0,-2,2,2,1,
        2,5,4,2,9,0,0,0,9,2,9,3,3,4,9,9,9,3,9,0,1,9,2,5,5,
        4,5,5,4,1,0,9,4,5,2,9,0,0,0,0,2,9,4,9,0,4,9,1,9,4,
        4,2,1,5,1,0,1,4,4,1,5,1,1,-1,0,0,0,0,0,0,3,3,4,3,3,
        1,9,3,9,4,5,5,9,9,4,4,3,9,1,2,3,2,3,2,4,5,4,9,9,5,
        5,2,4,1,3,3,9,2,9,4,9,3,4,4,5,2,1,3,3,9,4,9,2,2,5,
        1,1,9,1,2,1,2,4,5,2,5,3,3,2,0,0,0,0,0,0,0,-2,9,3,3,
        3,4,1,1,4,4,5,1,4,3,5,2,3,5,2,3,1,4,5,1,3,1,1,1,5,
        4,5,1,3,3,4,9,3,5,3,9,9,5,9,5,2,5,1,9,9,4,9,3,1,5,
        4,3,4,3,5,3,5,2,1,3,9,1,5,3,3,1,4,4,3,4,2,5,4,2,4,
        2,3,9,4,5,5,2,9,9,1,3,9,5,4,5,9,2,1,1,2,1,1,3,4,3,
        3,1,9,2,1,3,9,3,1,4,5,1,4,9,1,4,9,1,1,5,9,2,3,1,2,
        1,2,4,5,5,9,4,2,3,4,2,2,2,5,2,9,4,2,2,2,1,5,1,9,1,
        2,2,4,9,4,9,2,1,1,1,3,1,2,5,9,2,1,1,4,9,3,1,9,4,4,
        2,4,3,3,3,4,4,3,4,5,2,3,3,1,5,9,1,3,3,1,1,2,3,5,4,
        2,5,3,2,3,5,4,1,5,1,1,3,3,5,5,5,2,4,9,5,2,4,2,1,3,
        5,9,1,4,3,3,3,2,5,4,3,3,5,9,1,4,1,5,2,9,3,3,1,3,2,
        5,5,9,1,9,4,3,5,1,5,9,3,2,4,4,4,2,4,2,4,2,2,1,9,5,
        5,2,0,4,-2,3,4,4,1,2,4,2,2,4,0,3,2,3,9,2,4,4,1,5,3,
        1,1,9,5,3,3,3,1,2,4,9,1,1,2,4,1,5,9,5,4,4,2,5,3,2,
        4,9,1,4,1,3,3,5,2,3,9,1,5,3,2,1,3,5,2,2,5,9,5,4,1,
        3,4,9,2,3,5,1,1,2,4,3,4,3,4,2,4,5,5,3,1,5,9,4,5,4,
        5,3,1,4,2,9,5,4,3,3,3,9,1,2,1,1,5,9,5,2,2,1,1,3,2,
        5,5,2,5,1,9,2,4,9,4,2,5,1,1,1,4,2,2,1,5,2,4,3,5,2
    };*/
    
   /* CAStar* star = new CAStar(map, MAPSIZE_X, MAPSIZE_Y);
    Node* Star = new Node(8, 8);
    Node* End = new Node(4, 3);
    std::list<Node*> List = star->GetPath(Star, End);

    for (Node* node : List) {
        cout << node->x << "," << node->y << endl;
    }
    
    return 0;*/

	std::vector<std::vector<int>> small_map_score(3,std::vector<int>(3, 2));


    cout << small_map_score[0][0] << endl;
    

    return 0;
}
